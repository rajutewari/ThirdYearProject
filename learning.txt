public class Egret {

static double[] x1 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24};

static int[] y_1 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1};
static float b0 = 0.00f;
static float b1 = 0.00f;
static float b2 = 0.00f;
static float b3;

static float prediction = 0;
static float output = 0;

public static void main(String[] args) {
    int epoch = 0;
    float alpha = 0.3f;
    while (epoch < 10) {
        int i = 0;
        while (i < x1.length) {
            //CALCULATING PREDICTION
            output = (float) (b0 + (b1 * x1[i]));
            prediction = (float) (1 / (1 + Math.exp(-output)));
            System.out.println("Prediction == " + prediction);

            //REFINEMENT OF COEFFICIENTS
            b0 = b0 + alpha * (y_1[i] - prediction) * prediction * (1 - prediction) * 1.00f;
            b1 = (float) (b1 + alpha * (y_1[i] - prediction) * prediction * (1 - prediction) * x1[i]);

            i++;
        }
        epoch++;
    }
    System.out.println(b0 + "=" + b1 + "=====================");
    int i = 0;
    while (i < 24) {
        output = (float) (b0 + (b1 * x1[i]));
        prediction = (float) (1 / (1 + Math.exp(-output)));
        System.out.println("Prediction = " + prediction);
        i++;
    }    
}
}